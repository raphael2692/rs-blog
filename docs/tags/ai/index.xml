<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ai on Raffaele Spataro</title>
    <link>http://localhost:1313/tags/ai/</link>
    <description>Recent content in Ai on Raffaele Spataro</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Apr 2023 10:10:10 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Natural query against tabular data with LangChain and Pandas</title>
      <link>http://localhost:1313/posts/coding/langchain-pandas-agent/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/coding/langchain-pandas-agent/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In this tutorial, we will explore how LangChain can be used to retrieve information from a dataframe for a specific query using the &lt;code&gt;create_pandas_dataframe_agent&lt;/code&gt; function.&lt;/p&gt;&#xA;&lt;p&gt;This script utilizes pandas and Langchain, using the OpenAI API, to create a dataframe agent that can answer natural language questions based off of the data provided by a CSV file.&lt;/p&gt;&#xA;&lt;h2 id=&#34;step-1-import-libraries&#34;&gt;Step 1: Import Libraries&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s begin by importing the necessary libraries.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; langchain.agents &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; create_pandas_dataframe_agent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; langchain.llms &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; OpenAI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;step-2-create-a-dataframe&#34;&gt;Step 2: Create a DataFrame&lt;/h2&gt;&#xA;&lt;p&gt;We will be reading in data from a CSV file to create a DataFrame. In this case we will be using a dataset containing information about the python packages listend in pypi as of 2019.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a Wikipedia Q&amp;A using OpenAI, LangChain and Trafilatura</title>
      <link>http://localhost:1313/posts/coding/langchain-wikipedia/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/coding/langchain-wikipedia/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;In this tutorial, we will be building a Python program that searches for a specified topic on Wikipedia, extracts the text from the top search result, and generates a summary using OpenAI and Trafilatura. We will use the LangChain library to connect these different functionalities.&lt;/p&gt;&#xA;&lt;h2 id=&#34;required-libraries&#34;&gt;Required Libraries&lt;/h2&gt;&#xA;&lt;p&gt;We will be using the following external libraries:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;loguru&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;trafilatura&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;openai&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;langchain&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Before we dive deeper, ensure that all these libraries are installed in your system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Large language models as theories of language</title>
      <link>http://localhost:1313/posts/coding/large-language-model-as-theories-of-language/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/coding/large-language-model-as-theories-of-language/</guid>
      <description>&lt;p&gt;In this post, as part of a (potential) series, I will be sharing my thoughts on the latest technology and scientific advancements in a non-technical manner.&lt;/p&gt;&#xA;&lt;p&gt;Large language models, such as ChatGPT, are not just mere software implementations. They are a representation of a language theory, which can be considered a scientific advancement. Like other theories that may not be &amp;ldquo;true under all circumstances,&amp;rdquo; language models have the potential to advance both science and technology.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
